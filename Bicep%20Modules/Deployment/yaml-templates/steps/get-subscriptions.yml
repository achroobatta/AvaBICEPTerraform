parameters:
  - name: serviceConnection
    type: string
  - name: hubserviceConnection
    type: string
  - name: environmentType
    type: string
steps: 
- task: AzureCLI@2
  name: hubSubscriptionTask #output variable is the subscription ID. Used in the parameter overrrides below
  inputs:
    azureSubscription: ${{parameters.hubServiceConnection}}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: | # The subscription that is the hub
      az account list --all
      hubId=$(az account list --all --query '[?contains(name,`hub`)].id' --output tsv) 
      echo "##vso[task.setvariable variable=hubSubscription;isOutput=true]$hubId"
# As the service connection for the spoke deployment needs access to both hub and spoke subscriptions
- task: AzureCLI@2
  name: spokeSubscriptionTask
  inputs:
    azureSubscription: ${{parameters.serviceConnection}}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: | #use output tsv to return as string
      az account list --all
      hubName=$(az account list --all --query '[?contains(name,`hub`)].name' --output tsv | grep ${{parameters.environmentType}} )
      hubId=$(az account show --subscription $hubName --query [id] --output tsv)
      echo "hubId is:" $hubId
      spokeId=$(az account list --all --query '[?contains(name,`spoke`)].id' --output tsv) 
      echo "spokeId is:" $spokeId
      if [ -z "$spokeId" ] ; then spokeId=$hubId; fi
      echo "##vso[task.setvariable variable=spokeSubscription;isOutput=true]$spokeId"
- script: echo "SpokeID:"$(spokeSubscriptionTask.spokeSubscription)
- script: echo "HubID:"$(hubSubscriptionTask.hubSubscription)  