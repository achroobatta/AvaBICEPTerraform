trigger:
  branches:
    include: 
    - master
  paths:
    include: 
    - Deployment/inspec-tests
    - inspec-pipelines.yml

# pool:
#   vmImage: ubuntu-latest
pool: LinuxPool # on premises running required to run network tests
#TODO make pool selection part of the overall pipeline
variables:
  - name: environmentType
    value: prod
  - name: serviceConnection
    value: Production
  - name: poolType
    value: selfHosted # alternative is hosted
  - name: keyVaultName
    value: kv-prod-ae-sec-01  # needs to fixed
  - name: secretsFilter
    value: svcwinrm # alternative is hosted
  - group: inspec-${{variables.environmentType}}

stages:
- stage: test
  jobs:
  - job: Inspec_tests
    steps:

    #Install tasks
      - task: UseRubyVersion@0
        condition: eq(variables.poolType, 'hosted')
        displayName: 'Install Ruby on hosted agent'
        inputs:
          versionSpec: '>= 2.5'
          addToPath: true
      - task: Bash@3
        condition: eq(variables.poolType, 'selfHosted')
        displayName: 'Install Ruby on self-hosted agent'
        inputs:
          targetType: inline
          script: |
            sudo apt update
            sudo apt install ruby-full -y
      - script: curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec
        displayName: 'Install Inspec'
      - script: sudo wget https://github.com/mikefarah/yq/releases/download/v4.27.2/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq
        displayName: 'Install yq'

    # Run Tests for Azure
      - task: Bash@3
        displayName: 'Run azure inspec tests'
        inputs:
          targetType: inline
          script: |
            export AZURE_SUBSCRIPTION_ID=$(AZURE_SUBSCRIPTION_ID)
            export AZURE_CLIENT_ID=$(AZURE_CLIENT_ID)
            export AZURE_CLIENT_SECRET=$(AZURE_CLIENT_SECRET)
            export AZURE_TENANT_ID=$(AZURE_TENANT_ID)
            cp ./Deployment/inspec-tests/azure/environments/$(environmentType)/*.yml ./Deployment/inspec-tests/azure/files/
            inspec exec ./Deployment/inspec-tests/azure -t azure:// --chef-license=accept --reporter cli junit2:test-azure.xml
      - task: PublishTestResults@2
        displayName: Publish azure inspec test results
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: '**/test-azure.xml'
          mergeTestResults: true

    # Run tests for infra
      - task: AzureKeyVault@2
        displayName: 'Azure Key Vault: Creds to run WinRM'
        inputs:
          azureSubscription: ${{variables.serviceConnection}}
          keyVaultName: ${{variables.KeyVaultName}}
          secretsFilter: ${{variables.secretsFilter}}
      - task: Bash@3
        displayName: 'Run server inspec tests'
        condition: always()
        inputs:
          targetType: inline
          script: |
            cp ./Deployment/inspec-tests/servers/environments/$(environmentType)/servers.yml ./Deployment/inspec-tests/servers/
            readarray -t servers < <(yq '.[].name' ./Deployment/inspec-tests/servers/servers.yml) 
            readarray -t roles < <(yq '.[].role' ./Deployment/inspec-tests/servers/servers.yml)
            length=${#servers[@]}
            for ((j=0;j<${length};j++)); do inspec exec ./Deployment/inspec-tests/servers/${roles[j]} -b winrm  --host ${servers[j]} --password '$(svcwinrm)' --user ${{variables.secretsFilter}} --chef-license=accept --reporter cli junit2:test-${servers[j]}-${roles[j]}.xml; done
      - task: PublishTestResults@2
        displayName: Publish server inspec test results
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: '**/test-*.xml'
          mergeTestResults: true