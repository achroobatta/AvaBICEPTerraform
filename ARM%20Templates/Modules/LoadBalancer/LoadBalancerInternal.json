{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.5.6.12127australiaeast",
      "templateHash": "12604669370283105560"
    }
  },
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Admin password"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "defaultValue": "BackendVM",
      "metadata": {
        "description": "Prefix to use for VM names"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "Size of the virtual machines"
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue" : "suVnet",
      "metadata": {
        "description": "(required) The name of the virtual network."
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "(required) The name of the subnet."
      }
    },
    "privateIPAddress" : {
      "type": "string",
      "metadata": {
        "description": "(required) Private IP Address range."
      }
    },
    "privateIPAllocationMethod" : {
        "type": "string",
        "defaultValue": "Static",
        "allowedValues" : [
          "Static",
          "Dynamic"
        ],
        "metadata": {
          "description": "The Private IP allocation method"
        }
    },
    "frontendIPConfigurationsName" : {
      "type": "string",
      "metadata" : {
        "description": "The name of the frontend IP configuration."
      }
    },
    "backendAddressPools" : {
      "type": "string",
      "metadata":{
        "description": "The name of the backend address pool."
      }
    },
    "loadbalancerProbeName" : {
      "type": "string",
      "metadata" : {
        "description": "The name of the frontend IP configuration."
      }
    },
    "loadbalancerRuleName" : {
      "type": "string",
      "metadata" : {
        "description": " A load balancer rule is used to define how incoming traffic is distributed to the all the instances within the backend pool."
      }
    },
    "protocol" : {
      "type": "string",
      "defaultValue": "Tcp",
      "allowedValues" : [
          "Tcp",
          "Udp"
      ],
      "metadata": {
        "description": "Protocol is an established set of rules that determine how data is transmitted between different devices in the same network."
      }
    },
    "portNumber" : {
      "type": "int",
      "allowedValues" : [
          80
      ],
      "metadata": {
        "description": "System/Internet HTTP port"
      }
    },
    "numberOfProbes" : {
      "type": "int",
      "metadata": {
        "description": "Number of failed probes before the node is determined to be unhealthy."
      }
    }
  },
  "variables": {

    "virtualNetworkName": "[parameters('vnetName')]",
    "subnetName": "[parameters('subnetName')]",
    "loadBalancerName": "ilb",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2021-05-01",
      "name": "[variables('loadBalancerName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAddress": "[parameters('privateIPAddress')]",
              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]"
            },
            "name": "[parameters('frontendIPConfigurationsName')]"
          }
        ],
        "backendAddressPools": [
          {
            "name": "[parameters('backendAddressPools')]"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancerName'), parameters('frontendIPConfigurationsName'))]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), parameters('backendAddressPools'))]"
              },
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancerName'), parameters('loadbalancerProbeName'))]"
              },
              "protocol": "[parameters('protocol')]",
              "frontendPort": "[parameters('portNumber')]",
              "backendPort": "[parameters('portNumber')]",
              "idleTimeoutInMinutes": 15
            },
            "name": "[parameters('loadbalancerRuleName')]"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "[parameters('protocol')]",
              "port": "[parameters('portNumber')]",
              "intervalInSeconds": 15,
              "numberOfProbes": "[parameters('numberOfProbes')]"
            },
            "name": "[parameters('loadbalancerProbeName')]"
          }
        ]
      }
    }

  ]
}